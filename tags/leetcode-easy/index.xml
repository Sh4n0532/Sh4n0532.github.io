<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode (Easy) on Sh4n&#39;s Portfolio and Blog</title>
    <link>https://sh4n0532.github.io/tags/leetcode-easy/</link>
    <description>Recent content in LeetCode (Easy) on Sh4n&#39;s Portfolio and Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 22 Nov 2020 00:18:17 +0800</lastBuildDate><atom:link href="https://sh4n0532.github.io/tags/leetcode-easy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Palindrome Number</title>
      <link>https://sh4n0532.github.io/posts/palindrome-number/</link>
      <pubDate>Sun, 22 Nov 2020 00:18:17 +0800</pubDate>
      
      <guid>https://sh4n0532.github.io/posts/palindrome-number/</guid>
      <description>Problem Description Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward. Constraint: Must within the range of Integer.
Follow up: Could you solve it without converting the integer to a string?
Example 1:
Input: x = 121 Output: true Example 2:
Input: x = -121 Output: false Explanation: From left to right, it reads -121. From right to left, it becomes 121-.</description>
    </item>
    
    <item>
      <title>Reverse Number</title>
      <link>https://sh4n0532.github.io/posts/reverse-number/</link>
      <pubDate>Sun, 22 Nov 2020 00:12:08 +0800</pubDate>
      
      <guid>https://sh4n0532.github.io/posts/reverse-number/</guid>
      <description>Problem Description Given a 32-bit signed integer, reverse digits of an integer.
Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−2^31, 2^31 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
Input: x = 123 Output: 321 Solutions class Solution { public int reverse(int x) { long rev = 0; while (x !</description>
    </item>
    
    <item>
      <title>Two Sum</title>
      <link>https://sh4n0532.github.io/posts/two-sum/</link>
      <pubDate>Sun, 15 Nov 2020 00:06:33 +0800</pubDate>
      
      <guid>https://sh4n0532.github.io/posts/two-sum/</guid>
      <description>Problem Description Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].</description>
    </item>
    
  </channel>
</rss>
